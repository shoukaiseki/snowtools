<?xml version="1.0" encoding="UTF-8"?>

<!--
  Build file for JEval.

  This script requires a "lib" directory containing the necessary third party JAR files.
  See build.properties for the definitions of the properties used in this file.
-->

<!-- jdk版本 {{{1 -->
<!--jdk1.6-->
<!--jdk1.7-->
<!--jdk1.8-->
<!--jdk1.7 編譯是使用的默認jdk -->
<project name="shoukaiseki" default="build_no_doc_release" basedir=".">
	<!-- 引用外部配置文件 {{{1 -->
	<property file="build.properties"/>
	<!--<property file="../jdk_linux.properties"/>-->
	<!--
	  -->
	<property file="../jdk_win.properties"/>
	  

	<path id="libs">
		<fileset dir="${lib.dir}">
			<!--<include name="**/*.jar"/>-->
			<include name="msutil.jar"/>
			<include name="mssqlserver.jar"/>
			<include name="msbase.jar"/>
			<include name="poi-3.8-20120326.jar"/>
			<include name="commons-logging-1.1.jar"/>
			<include name="javax.servlet_1.0.0.0_2-5.jar"/>
			<include name="poi-ooxml-schemas-3.8-20120326.jar"/>
			<include name="poi-examples-3.8-20120326.jar"/>
			<include name="stax-api-1.0.1.jar"/>
			<include name="modelapi.jar"/>
			<include name="jargs-1.0.jar"/>
			<include name="xmlbeans-2.3.0.jar"/>
			<include name="poi-scratchpad-3.8-20120326.jar"/>
			<include name="log4j-1.2.17.jar"/>
			<include name="cpdetector_1.0.10.jar"/>
			<include name="dom4j-1.6.jar"/>
			<include name="antlr-2.7.4.jar"/>
			<include name="chardet-1.0.jar"/>
			<include name="xom-1.1.jar"/>
			<include name="jxl.jar"/>
			<include name="poi-ooxml-3.8-20120326.jar"/>
			<include name="junit-4.11.jar"/>
			<include name="poi-excelant-3.8-20120326.jar"/>
			<include name="dom4j-1.6.1.jar"/>
			<include name="oraclethin.jar"/>
			<include name="com.ibm.icu_3.8.1.v20080530.jar"/>
			<include name="pinyin4j-2.5.0.jar"/>
			<include name="org.eclipse.birt.core_2.3.2.r232_20090204a.jar"/>
			<include name="javatools.jar"/>
			<include name="uic.jar"/>
			<include name="hibernate-core-4.1.3.Final.jar"/>
			<include name="druid-1.0.5.jar"/>
			<include name="commons-dbcp-1.2.1.jar"/>
			
		</fileset>
	</path>


	<target name="build_no_doc_release" depends="clean,compile,compiletests,tests,compilesamples,jar" 
		description="編譯項目,執行tests,不執行doc和release"/>

	<target name="build" depends="clean,compile,javadoc,compiletests,tests,compilesamples,jar,release" 
		description="Build the project, run tests and create release"/>

	<target name="clean" description="Clean all output dirs">
		<delete dir="${classes.dir}"/>
		<delete dir="${dist.dir}"/>
		<delete dir="${javadocs.dir}"/>		
		<delete dir="${junit.reports.dir}"/>
		<delete dir="${release.dir}"/>
		<delete dir="${testclasses.dir}"/>
		<delete dir="${samplesclasses.dir}"/>
	</target>

	<target name="compile" depends="" description="Compile main source tree Java files into class files">
		<mkdir dir="${classes.dir}"/>
		<echo message="jdk1.7=${jdk1.7}"/>
		
		<javac destdir="${classes.dir}" debug="${debug}"
			fork="yes"
			executable="${jdk1.7}"
			encoding="UTF-8"
			deprecation="false" optimize="false" failonerror="true" includeAntRuntime="false">
			<!--<javac destdir="${classes.dir}" includeAntRuntime="false" >-->
				<!--<jvmarg value="-Xlint:deprecation"></jvmarg>-->
			<src path="${src.dir}"/>			
			<classpath refid="libs"/>
		</javac>
	</target>

	<target name="compiletests" depends="compile" description="Compile test source tree java files into class files">
		<mkdir dir="${testclasses.dir}"/>

		<javac destdir="${testclasses.dir}" debug="${debug}" encoding="UTF-8"
			deprecation="false" optimize="false" failonerror="true" includeAntRuntime="false">
			<src path="${test.dir}"/>
			<classpath refid="libs"/>
			<classpath location="${classes.dir}"/>
		</javac>
	</target>

	<target name="tests" depends="compiletests" description="Run tests">
		<property name="reports.dir" value="${junit.reports.dir}"/>

		<mkdir dir="${reports.dir}"/>

		<junit forkmode="perBatch" printsummary="yes" haltonfailure="yes" haltonerror="yes">
			<classpath location="${testclasses.dir}"/>
			<classpath location="${classes.dir}"/>
			<classpath refid="libs"/>
			<formatter type="plain" usefile="false"/>
			<formatter type="xml"/>
		</junit>
	</target>

	<target name="compilesamples" depends="compile" description="Compile test source tree java files into class files">
		<mkdir dir="${samplesclasses.dir}"/>

		<echo message="jdk1.7=${jdk1.7}"/>
		<javac destdir="${samplesclasses.dir}" 
			executable="${jdk1.7}"
			debug="${debug}"
			encoding="UTF-8"
			deprecation="false" optimize="false" failonerror="true" includeAntRuntime="false">
			<src path="${samples.dir}"/>
			<classpath refid="libs"/>
			<classpath location="${classes.dir}"/>
		</javac>
	</target>	

	<target name="jar" depends="compile" description="Create JAR file">
		<mkdir dir="${dist.dir}"/>
		<copy  todir="${classes.dir}" overwrite="true">
			<fileset dir="${src.dir}" defaultexcludes="yes">
				<include name="**/*.java"/>
			</fileset>
		</copy>
		<jar jarfile="${dist.dir}/shoukaiseki.jar"
			>	
			<fileset dir="${classes.dir}">
				<include name="META-INF/**"/>
				<include name="**"/>
			</fileset>
			<manifest>
				<attribute name="Implementation-Title" value="${title}"/>
				<attribute name="Implementation-Version" value="${version}"/>
				<attribute name="${name}-Version" value="${version}"/>
			</manifest>
		</jar>
		<copy file="${dist.dir}/shoukaiseki.jar" todir="${lib.dir}/mylib/" overwrite="true"></copy>
	</target>

	<target name="javadoc" description="Generate Javadocs for main source tree">

		<mkdir dir="${javadocs.dir}"/>
		<!--sourcepath="${src.dir}"-->
		<javadoc  destdir="${javadocs.dir}" windowtitle="${title}" 
			charset="UTF-8"
			encoding="UTF-8"
			docencoding="UTF-8"
			additionalparam="-breakiterator" access="package" author="true" 
			version="true" use="true" defaultexcludes="true" overview="${src.dir}/overview.html">
			<doctitle><![CDATA[<h1>${title}</h1>]]></doctitle>
			<bottom><![CDATA[<i>${copyright}</i>]]></bottom>
			<classpath refid="libs"/>
			<fileset dir="${src.dir}" defaultexcludes="yes">
				<include name="com/**/*.java"/>
				<exclude name="**/*bak.java" />
				<exclude name="**/*bak01.java" />
				<exclude name="**/*bak02.java" />
				<exclude name="**/*.xml" />
				<exclude name="*.bat"/>
				<exclude name="**/*.sql"/>
				<exclude name="**/*.txt"/>
				<exclude name="*.xml"/>
				<exclude name="*.ini"/>
				<exclude name="*.properties"/>
			</fileset>
			<!--<packageset dir="${src.dir}" defaultexcludes="yes">-->
				<!--<include name="net/sourceforge/jeval/**"/>-->
				<!--<include name="com/**/*.java"/>-->
				<!--<exclude name="**/ReadPurosesuName.java" />-->
				<!--</packageset>-->
		</javadoc>	
	</target>

	<target name="release" depends="javadoc,jar" description="生成zip文件">
		<mkdir dir="${release.dir}"/>

		<delete file="${release.dir}/${release.zip}"/>
		<delete file="${release.dir}/${release-with-dependencies.zip}"/>

		<fileset id="main" dir=".">
			<include name="dist/**"/>
			<include name="docs/**"/>
			<include name="lib/**"/>
			<include name="samples/**"/>
			<include name="src/**"/>
			<include name="test/**"/>
			<include name="*.bat"/>
			<include name="*.txt"/>
			<include name="*.xml"/>
			<include name="*.ini"/>
			<include name="*.properties"/>
		</fileset>

		<zip zipfile="${release.dir}/${release.zip}">
			<zipfileset refid="main" prefix="${release.path}"/>
		</zip>
	</target>

	<target name="usage">
		<echo message=""/>
		<echo message="${name} build file"/>
		<echo message="------------------------------------------------------"/>
		<echo message=""/>
		<echo message="The available targets are:"/>
		<echo message=""/>
		<echo message="build						--> Build the project, run tests and create release"/>
		<echo message="build_no_doc_release			--> 編譯項目,執行tests,不執行doc和release"/>
		<echo message="clean						--> Clean all output directories"/>
		<echo message="compile						--> Compile main source tree Java files into class files"/>
		<echo message="compiletests					--> Compile test source tree java files into class files"/>
		<echo message="tests						--> Run tests"/>
		<echo message="compilesamples				--> Compile samples source tree java files into class files"/>
		<echo message="jar							--> Create JAR file"/>
		<echo message="javadoc						--> Generate Javadocs for main source tree"/>
		<echo message="release						--> 生成zip文件"/>
		<echo message=""/>
	</target>

	<target name="copyToOtherProject">
		<copy file="${dist.dir}/${ProjectName}.jar" todir="/media/linux/data/java/git/maximotools/maximoTools/maximoTools/war/WEB-INF/lib" overwrite="true"></copy>
	</target>

</project>
